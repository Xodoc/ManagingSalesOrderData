@page "/window/delete/{windowId:int}"
@using ManagingSalesOrderData.Shared.Dtos
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h2>Delete Window</h2>
<br />

<div class="form-group">
    <h4>Do you want to delete this window?</h4>
    <table class="table" style="display:block;">
        <tbody>
            <tr>
                <td>Name :</td>
                <td></td>
                <td>@window.Name</td>
            </tr>
            <tr>
                <td>QuantityOfWindows :</td>
                <td></td>
                <td>@window.QuantityOfWindows</td>
            </tr>
            <tr>
                <td>TotalSubElements :</td>
                <td></td>
                <td>@window.TotalSubElements</td>
            </tr>
            <tr>
                <td>OrderId :</td>
                <td></td>
                <td>@window.OrderId</td>
            </tr>
        </tbody>
    </table>
</div>
<div class="form-group">
    <input type="submit" value="Delete" @onclick="(async () => await RemoveWindow(window.Id))" class="btn btn-danger" />
    <input type="submit" value="Cancel" @onclick="(() => Cancel())" class="btn btn-warning" />
</div>

@code {
    [Parameter]
    public int windowId { get; set; }
    private WindowDto window = new();

    protected override async Task OnInitializedAsync()
    {
        window = await Http.GetFromJsonAsync<WindowDto>("/api/window/" + Convert.ToInt32(windowId));
    }

    protected async Task RemoveWindow(int orderId)
    {
        await Http.DeleteAsync("api/window/" + orderId);
        NavigationManager.NavigateTo("/windows");
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("/windows");
    }
}